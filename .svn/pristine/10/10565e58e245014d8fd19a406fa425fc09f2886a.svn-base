package com.jk.kq.task;

import com.jk.kq.entity.OndutyRecord;
import com.jk.kq.service.IOndutyRecordService;
import com.jk.kq.service.IPunchRecordService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.scheduling.annotation.EnableScheduling;
import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.stereotype.Component;
import java.util.Date;
import java.util.List;

/**
 * 值班的定时任务，每天的23点进行刷新
 *
 * @author 何任鹏
 * @version 1.0
 * @date 2020年06月04日
 */
@Component
@EnableScheduling
public class OndutyTask {

    @Autowired
    private IOndutyRecordService ondutyRecordService;

    @Autowired
    private IPunchRecordService punchRecordService;

    /**
     * 值班定时任务，每天的23点进行刷新
     */
    @Scheduled(cron = "0 00 23 * * ?")
    public void ondutyTask() {
        //首先查找今天值班的记录，然后判断是否有9点之后的打卡记录，
        List<OndutyRecord> list = ondutyRecordService.selectOnToDay(new Date());
        //如果有，则说明正常值班，把状态修改为1
        for (OndutyRecord ondutyRecord : list) {
            //获取值班人
            Integer openUserId = ondutyRecord.getOpenUserId();
            //查找这个值班人是否在9点之后，11点之前有打卡记录，
            Integer i = punchRecordService.checkPunch(openUserId, new Date());
            if(i > 0){
                //如果有，则说明正常值班，把状态修改为1
                ondutyRecord.setState(1);
            }else {
                //如果没有，则说明没有值班，把状态修改为-1
                ondutyRecord.setState(-1);
            }
            //更新记录
            ondutyRecordService.updateById(ondutyRecord);
        }
    }



}
