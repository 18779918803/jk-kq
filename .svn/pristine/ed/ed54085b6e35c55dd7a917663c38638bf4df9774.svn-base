package com.jk.kq.mapper;

import com.jk.common.base.BaseMapper;
import org.apache.ibatis.annotations.Mapper;
import com.jk.kq.entity.OpenUser;
import org.apache.ibatis.annotations.Param;

import java.util.List;

/**
 * 用户映射层
 *
 * @author 何任鹏
 * @version 1.0
 * @date 2020年05月26日
 */
@Mapper
public interface OpenUserMapper extends BaseMapper<OpenUser> {


    /**
     * 通过第三方Session查找OpenUser用户信息
     *
     * @param thirdSession
     * @return
     */
    OpenUser selectByThirdSession(@Param("thirdSession") String thirdSession);

    /**
     * 通过OpenId获取OpenUser的信息
     *
     * @param openid
     * @return
     */
    OpenUser selectByOpenid(@Param("openid") String openid);

    /**
     * 获取职位等级为分管领导的用户信息
     *
     * @return
     */
    List<OpenUser> getUserByPosition();


    /**
     * 插入分管领导分管的公司或部门
     *
     * @param openUserId
     * @param organId
     */
    void insertOrgan(@Param("openUserId") Integer openUserId, @Param("organId") Integer organId);

    /**
     * 通过openUserId查找该分管领导下分管的公司/部门
     *
     * @param openUserId
     * @return
     */
    List getOrganByOpenUserId(@Param("openUserId") Integer openUserId);

    /**
     * 删除分管领导子节点的公司/部门信息
     *
     * @param userOrganId
     */
    void deleteOrgan(@Param("userOrganId") Integer userOrganId);

    /**
     * 通过用户部门和职位等级查找用户（给领导推送消息）
     *
     * @param organId 用户部门
     * @param grade   职位等级
     * @return
     */
    List<OpenUser> selectOpenUser(@Param("organId") Integer organId, @Param("grade") Integer grade);


    /**
     * 查找该部门负责人的分管领导
     *
     * @param organId 领导分管部门
     * @param grade   领导等级
     * @return 返回该申请需要推送的用户的集合
     */
    List<OpenUser> selectLeaders(@Param("organId") Integer organId, @Param("grade") Integer grade);

    /**
     * 使用微信小程序的用户获取公众号的用户openid（批量获取）
     *
     * @param checkList 需要推送的用户的微信小程序信息集合
     * @return 返回公众号的openid集合
     */
    List<String> getGzhOpenIds(@Param("checkList") List<OpenUser> checkList);

    /**
     * 使用微信小程序的用户获取公众号的用户openid（单个获取）
     *
     * @param openUserId 用户id
     * @return
     */
    String getGzhOpenId(@Param("openUserId") Integer openUserId);
}
