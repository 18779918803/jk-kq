package com.jk.api.service.impl;


import com.jk.kq.common.GeneralConvertor;
import com.jk.kq.entity.OvertimeRecord;
import com.jk.kq.entity.WorkType;
import com.jk.kq.entity.vo.OvertimeRecordListVO;
import com.jk.kq.entity.vo.OvertimeRecordVo;
import com.jk.kq.entity.vo.SumVo;
import com.jk.kq.service.IWorkTypeService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

@Service
public class OvertimeRecordApiServiceImpl {

    @Autowired
    private GeneralConvertor convertor;

    @Autowired
    private IWorkTypeService workTypeService;

    public OvertimeRecordListVO compute(Map<Integer, List<OvertimeRecord>> input
    ,List<OvertimeRecord> overtimeRecords){
        //产生元素
        input.forEach(
                (k,v) ->{
                    List<OvertimeRecord> arr = new ArrayList<>();
                    for (OvertimeRecord record : overtimeRecords) {
                        if (record.getTypeId().equals(k)){
                            arr.add(record);
                        }
                    }
                    input.put(k,arr);
                }
        );

        List<SumVo> sum = new ArrayList<>();

        for (Map.Entry<Integer, List<OvertimeRecord>> entry : input.entrySet()) {
            Integer k = entry.getKey();
            List<OvertimeRecord> v = entry.getValue();
            SumVo build = SumVo.builder().typeId(k).build();
            BigDecimal total = BigDecimal.ZERO;
            for (OvertimeRecord record : v) {
                BigDecimal day = record.getDay();
                total = total.add(day);
            }
            build.setTypeSum(total);
            sum.add(build);
        }

        OvertimeRecordListVO result = OvertimeRecordListVO.builder().sum(sum).build();

        List<OvertimeRecordVo> convertor = this.convertor.convertor(overtimeRecords, OvertimeRecordVo.class);
        result.setList(convertor);

        for (OvertimeRecordVo vo : convertor) {
            Integer typeId = vo.getTypeId();
            WorkType workType = workTypeService.selectById(typeId);
            vo.setTypeName(workType.getName());
        }

        for (SumVo vo : sum) {
            Integer typeId = vo.getTypeId();
            WorkType workType = workTypeService.selectById(typeId);
            vo.setTypeName(workType.getName());
        }
        return result;
    }

}
